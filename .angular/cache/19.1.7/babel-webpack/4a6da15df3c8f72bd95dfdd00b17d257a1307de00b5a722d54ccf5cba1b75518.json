{"ast":null,"code":"import { Actions, createEffect, ofType } from \"node_modules/@ngrx/effects\";\nimport { map, switchMap, tap } from \"rxjs/operators\";\nimport * as fromActions from \"./user.actions\";\nimport { UserService } from \"./user.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"node_modules/@ngrx/effects\";\nimport * as i2 from \"./user.service\";\nexport let UserEffects = /*#__PURE__*/(() => {\n  class UserEffects {\n    actions$;\n    userService;\n    constructor(actions$, userService) {\n      this.actions$ = actions$;\n      this.userService = userService;\n    }\n    loadAllUsers$ = createEffect(() => this.actions$.pipe(ofType(fromActions.LoadUsers), tap(console.log), switchMap(() => this.userService.getAllUsers().pipe(tap(console.log), map(data => fromActions.LoadUsersSuccess({\n      payload: {\n        users: data\n      }\n    })), tap(console.log)))));\n    static ɵfac = function UserEffects_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UserEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.UserService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserEffects,\n      factory: UserEffects.ɵfac\n    });\n  }\n  return UserEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}