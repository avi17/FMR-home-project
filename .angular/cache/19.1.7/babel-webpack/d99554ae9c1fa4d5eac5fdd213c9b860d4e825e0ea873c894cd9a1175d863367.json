{"ast":null,"code":"import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { map, switchMap, tap } from \"rxjs/operators\";\nimport * as fromActions from \"./orders.actions\";\nimport { AppService } from \"../app.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../app.service\";\nexport let OrderEffects = /*#__PURE__*/(() => {\n  class OrderEffects {\n    constructor(actions$, orderService) {\n      this.actions$ = actions$;\n      this.orderService = orderService;\n      this.loadAllOrders$ = createEffect(() => this.actions$.pipe(ofType(fromActions.LoadOrders), tap(console.log), switchMap(() => this.orderService.getAllOrders().pipe(tap(console.log), map(data => fromActions.LoadOrdersSuccess({\n        payload: {\n          orders: data\n        }\n      })), tap(console.log)))));\n    }\n    static {\n      this.ɵfac = function OrderEffects_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || OrderEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.AppService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: OrderEffects,\n        factory: OrderEffects.ɵfac\n      });\n    }\n  }\n  return OrderEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}