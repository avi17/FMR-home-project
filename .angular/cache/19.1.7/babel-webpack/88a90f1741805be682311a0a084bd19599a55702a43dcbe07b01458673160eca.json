{"ast":null,"code":"import { createFeatureSelector, createSelector, createReducer, on } from \"@ngrx/store\";\nimport * as fromActions from \"./orders.actions\";\nimport * as fromAdapter from \"./orders.adapter\";\nexport const initialState = fromAdapter.adapter.getInitialState({\n  selectedOrderId: \"\",\n  selectedOrderByUserId: \"\"\n});\n// Creating reducer\nconst _OrderReducer = createReducer(initialState, on(fromActions.AddOrder, (state, {\n  payload\n}) => fromAdapter.adapter.addOne(payload.order, state)), on(fromActions.AddOrders, (state, {\n  payload\n}) => fromAdapter.adapter.addMany(payload.orders, state)), on(fromActions.UpdateOrder, (state, {\n  payload\n}) => fromAdapter.adapter.updateOne(payload.order, state)), on(fromActions.UpdateOrders, (state, {\n  payload\n}) => fromAdapter.adapter.updateMany(payload.orders, state)), on(fromActions.RemoveOrder, (state, {\n  payload\n}) => fromAdapter.adapter.removeOne(payload.id, state)), on(fromActions.RemoveOrders, (state, {\n  payload\n}) => fromAdapter.adapter.removeMany(payload.ids, state)), on(fromActions.ClearOrders, state => fromAdapter.adapter.removeAll({\n  ...state,\n  selectedOrderId: \"\"\n})), on(fromActions.LoadOrdersSuccess, (state, {\n  payload\n}) => {\n  state = fromAdapter.adapter.removeAll({\n    ...state,\n    selectedOrderId: \"\"\n  });\n  return fromAdapter.adapter.addMany(payload.orders, state);\n}), on(fromActions.SelectOrder, (state, {\n  payload\n}) => {\n  console.log('here3');\n  return Object.assign({\n    ...state,\n    selectedOrderId: payload.orderId\n  });\n}), on(fromActions.SelectOrderByUserId, (state, {\n  payload\n}) => Object.assign({\n  ...state,\n  selectCurrentOrderByUserId: payload.userId\n})));\nexport function orderReducer(state, action) {\n  return _OrderReducer(state, action);\n}\n// Creating selectors\nexport const getSelectedOrderId = state => state.selectedOrderId;\nexport const getSelectCurrentOrderByUserId = state => state.selectedOrderByUserId;\nexport const getOrderState = createFeatureSelector(\"orderState\");\nexport const selectOrderIds = createSelector(getOrderState, fromAdapter.selectOrderIds);\nexport const selectOrderEntities = createSelector(getOrderState, fromAdapter.selectOrderEntities);\nexport const selectAllOrders = createSelector(getOrderState, fromAdapter.selectAllOrders);\nexport const OrdersCount = createSelector(getOrderState, fromAdapter.orderCount);\nexport const selectCurrentOrderId = createSelector(getOrderState, getSelectedOrderId);\nexport const selectCurrentOrderByUserId = createSelector(getOrderState, getSelectCurrentOrderByUserId);\nexport const selectCurrentOrder = createSelector(selectOrderEntities, selectCurrentOrderId, (orderEntities, orderId) => orderEntities[orderId]);\nexport const selectCurrentOrderByUser = createSelector(selectOrderEntities, selectCurrentOrderByUserId, (orderEntities, userId) => orderEntities[userId]);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}